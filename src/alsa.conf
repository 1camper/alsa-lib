#
#  ALSA library configuration file
#

# preload configuration files

preload {
	filenames [
		"/etc/asound.conf"
		"~/.asoundrc"
	]
}		

#
#  PCM interface
#

pcm.hw {
	@args [ CARD DEV SUBDEV ]
	@args.CARD {
		type integer
		default {
			@func igetenv
			vars [
				ALSA_PCM_CARD
				ALSA_CARD
			]
			default 0
		}
	}
	@args.DEV {
		type integer
		default {
			@func igetenv
			vars [
				ALSA_PCM_DEVICE
			]
			default 0
		}
	}
	@args.SUBDEV {
		type integer
		default -1
	}		
	type hw
	card $CARD
	device $DEV
	subdevice $SUBDEV
}

pcm.plughw {
	@args [ CARD DEV SUBDEV ]
	@args.CARD {
		type integer
		default {
			@func igetenv
			vars [
				ALSA_PCM_CARD
				ALSA_CARD
			]
			default 0
		}
	}
	@args.DEV {
		type integer
		default {
			@func igetenv
			vars [
				ALSA_PCM_DEVICE
			]
			default 0
		}
	}
	@args.SUBDEV {
		type integer
		default -1
	}		
	type plug
	slave.pcm {
		type hw
		card $CARD
		device $DEV
		subdevice $SUBDEV
	}
}

pcm.plug {
	@args [ SLAVE ]
	@args.SLAVE {
		type string
	}
	type plug
	slave.pcm $SLAVE
}

pcm.shm {
	@args [ SOCKET PCM ]
	@args.SOCKET {
		type string
	}
	@args.PCM {
		type string
	}
	type shm
	server $SOCKET
	pcm $PCM
}

pcm.tee {
	@args [ SLAVE FILE FORMAT ]
	@args.SLAVE {
		type string
	}
	@args.FILE {
		type string
	}
	@args.FORMAT {
		type string
		default raw
	}
	type file
	slave.pcm $SLAVE
	file $FILE
	format $FORMAT
}

pcm.file {
	@args [ FILE FORMAT ]
	@args.FILE {
		type string
	}
	@args.FORMAT {
		type string
		default raw
	}
	type file
	slave.pcm null
	file $FILE
	format $FORMAT
}

pcm.null {
	type null
}
	
pcm.default {
	type plug
	slave.pcm {
		type hw
		card {
			@func igetenv
			vars [
				ALSA_PCM_CARD
				ALSA_CARD
			]
			default 0
		}
		device {
			@func igetenv
			vars [
				ALSA_PCM_DEVICE
			]
			default 0
		}
		subdevice -1
	}
}

pcm.front {
	@args [ CARD DEV ]
	@args.CARD {
		type integer
		default {
			@func igetenv
			vars [
				ALSA_FRONT_CARD
				ALSA_PCM_CARD
				ALSA_CARD
			]
			default 0
		}
	}
	@args.DEV {
		type integer
		default {
			@func igetenv
			vars [
				ALSA_FRONT_DEVICE
			]
			default 0
		}
	}
	@func refer
	file {
		@func concat
		strings [
			{
				@func datadir
			}
			"/cards/"
			{
				@func card_strtype
				card $CARD
			}
			".conf"
		]
	}
	name {
		@func concat
		strings [
			"cards."
			{
				@func card_strtype
				card $CARD
			}
			".pcm.front." $DEV ":CARD=" $CARD
		]
	}
}
	
pcm.rear {
	@args [ CARD DEV ]
	@args.CARD {
		type integer
		default {
			@func igetenv
			vars [
				ALSA_REAR_CARD
				ALSA_PCM_CARD
				ALSA_CARD
			]
			default 0
		}
	}
	@args.DEV {
		type integer
		default {
			@func igetenv
			vars [
				ALSA_REAR_DEVICE
			]
			default 0
		}
	}
	@func refer
	file {
		@func concat
		strings [
			{
				@func datadir
			}
			"/cards/"
			{
				@func card_strtype
				card $CARD
			}
			".conf"
		]
	}
	name {
		@func concat
		strings [
			"cards."
			{
				@func card_strtype
				card $CARD
			}
			".pcm.rear." $DEV ":CARD=" $CARD
		]
	}
}
	
pcm.center_lfe {
	@args [ CARD DEV ]
	@args.CARD {
		type integer
		default {
			@func igetenv
			vars [
				ALSA_CENTER_LFE_CARD
				ALSA_PCM_CARD
				ALSA_CARD
			]
			default 0
		}
	}
	@args.DEV {
		type integer
		default {
			@func igetenv
			vars [
				ALSA_CENTER_LFE_DEVICE
			]
			default 0
		}
	}
	@func refer
	file {
		@func concat
		strings [
			{
				@func datadir
			}
			"/cards/"
			{
				@func card_strtype
				card $CARD
			}
			".conf"
		]
	}
	name {
		@func concat
		strings [
			"cards."
			{
				@func card_strtype
				card $CARD
			}
			".pcm.center_lfe." $DEV ":CARD=" $CARD
		]
	}
}
	
pcm.surround40 {
	@args [ CARD DEV ]
	@args.CARD {
		type integer
		default {
			@func igetenv
			vars [
				ALSA_SURROUND40_CARD
				ALSA_PCM_CARD
				ALSA_CARD
			]
			default 0
		}
	}
	@args.DEV {
		type integer
		default {
			@func igetenv
			vars [
				ALSA_SURROUND40_DEVICE
			]
			default 0
		}
	}
	@func refer
	file {
		@func concat
		strings [
			{
				@func datadir
			}
			"/cards/"
			{
				@func card_strtype
				card $CARD
			}
			".conf"
		]
	}
	name {
		@func concat
		strings [
			"cards."
			{
				@func card_strtype
				card $CARD
			}
			".pcm.surround40." $DEV ":CARD=" $CARD
		]
	}
}
	
pcm.surround51 {
	@args [ CARD DEV ]
	@args.CARD {
		type integer
		default {
			@func igetenv
			vars [
				ALSA_SURROUND51_CARD
				ALSA_PCM_CARD
				ALSA_CARD
			]
			default 0
		}
	}
	@args.DEV {
		type integer
		default {
			@func igetenv
			vars [
				ALSA_SURROUND51_DEVICE
			]
			default 0
		}
	}
	@func refer
	file {
		@func concat
		strings [
			{
				@func datadir
			}
			"/cards/"
			{
				@func card_strtype
				card $CARD
			}
			".conf"
		]
	}
	name {
		@func concat
		strings [
			"cards."
			{
				@func card_strtype
				card $CARD
			}
			".pcm.surround51." $DEV ":CARD=" $CARD
		]
	}
}
	
pcm.iec958 {
	@args [ CARD DEV AES0 AES1 AES2 AES3 ]
	@args.CARD {
		type integer
		default {
			@func igetenv
			vars [
				ALSA_IEC958_CARD
				ALSA_PCM_CARD
				ALSA_CARD
			]
			default 0
		}
	}
	@args.DEV {
		type integer
		default {
			@func igetenv
			vars [
				ALSA_IEC958_DEVICE
			]
			default 0
		}
	}
	@args.AES0 {
		type integer
		# consumer, not-copyright, emphasis-none, mode=0
		default 0x04
	}
	@args.AES1 {
		type integer
		# original, PCM coder
		default 0x82
	}
	@args.AES2 {
		type integer
		# source and channel
		default 0x00
	}
	@args.AES3 {
		type integer
		# fs=48000Hz, clock accuracy=1000ppm
		default 0x02
	}
	@func refer
	file {
		@func concat
		strings [
			{
				@func datadir
			}
			"/cards/"
			{
				@func card_strtype
				card $CARD
			}
			".conf"
		]
	}
	name {
		@func concat
		strings [
			"cards."
			{
				@func card_strtype
				card $CARD
			}
			".pcm.iec958." $DEV ":"
			"CARD=" $CARD ","
			"AES0=" $AES0 ","
			"AES1=" $AES1 ","
			"AES2=" $AES2 ","
			"AES3=" $AES3
		]
	}
}

pcm.spdif pcm.iec958

#
#  Control interface
#
	
ctl.hw {
	@args[ CARD ]
	@args.CARD {
		type integer
		default {
			@func igetenv
			vars [
				ALSA_CTL_CARD
				ALSA_CARD
			]
			default 0
		}
	}
	type hw
	card $CARD
}

ctl.shm {
	@args [ SOCKET CTL ]
	@args.SOCKET {
		type string
	}
	@args.CTL {
		type string
	}
	type shm
	server $SOCKET
	ctl $CTL
}

ctl.default {
	type hw
	card {
		@func igetenv
		vars [
			ALSA_CTL_CARD
			ALSA_CARD
		]
		default 0
	}
}

#
#  RawMidi interface
#

rawmidi.hw {
	@args [ CARD DEV SUBDEV ]
	@args.CARD {
		type integer
		default {
			@func igetenv
			vars [
				ALSA_RAWMIDI_CARD
				ALSA_CARD
			]
			default 0
		}
	}
	@args.DEV {
		type integer
		default {
			@func igetenv
			vars [
				ALSA_RAWMIDI_DEVICE
			]
			default 0
		}
	}
	@args.SUBDEV {
		type integer
		default -1
	}
	type hw
	card $CARD
	device $DEV
	subdevice $SUBDEV
}

rawmidi.default {
	type hw
	card {
		@func igetenv
		vars [
			ALSA_RAWMIDI_CARD
			ALSA_CARD
		]
		default 0
	}
	device {
		@func igetenv
		vars [
			ALSA_RAWMIDI_DEVICE
		]
		default 0
	}
}

#
#  Sequencer interface
#

seq.default {
	type hw
}

seq.hw {
	type hw
}
